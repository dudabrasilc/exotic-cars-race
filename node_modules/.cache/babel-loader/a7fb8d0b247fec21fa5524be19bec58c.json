{"ast":null,"code":"var _jsxFileName = \"/Users/dudabrasilc/Development/code/phase-5/pre-project/client/src/components/RaceCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CarRaceImage from \"./CarRaceImage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction RaceCard(_ref) {\n  _s();\n\n  var _race$race_track4;\n\n  let {\n    deleteRace,\n    deleteCar,\n    raceId,\n    updateFavorite\n  } = _ref;\n  const [show, setShow] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [result, setResult] = useState(null);\n  const [hasMinimumCars, setHasMinimumCars] = useState(true);\n  const [showResult, setShowResult] = useState(false);\n  const [race, setRace] = useState([]);\n  useEffect(() => {\n    fetch(`/races/${raceId}`).then(resp => resp.json()).then(data => {\n      setIsFavorite(data.is_favorited);\n    });\n  }, [raceId]);\n  useEffect(() => {\n    fetch(`/races/${raceId}`).then(resp => resp.json()).then(data => {\n      setRace(data);\n    });\n  }, []);\n\n  if (!race) {\n    return null; // or some other fallback UI\n  }\n\n  const racesCar = race.races_cars && race.races_cars.find(racesCar => {\n    return toString(racesCar.race_id) === toString(race.id);\n  }); // this component is responsible to render all functionality of a racecard: delete race button,\n\n  const handleDeleteCar = carId => {\n    if (race && race.races_cars && racesCar) {\n      const racesCarToDelete = race.races_cars.find(racesCar => racesCar.car_id === carId);\n\n      if (racesCarToDelete) {\n        fetch(`/races_cars/${racesCarToDelete.id}`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(resp => resp.json()).then(data => {\n          deleteCar(carId);\n        }).catch(err => {\n          console.log(\"Error deleting race car:\", err);\n        });\n      }\n    }\n  };\n\n  const handleDeleteRace = () => {\n    if (race) {\n      fetch(`/races/${race.id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(resp => resp.json()).then(data => {\n        deleteRace(race.id);\n      }).catch(err => {\n        console.log(\"Error deleting race:\", err);\n      });\n    }\n  };\n\n  function handleFavorite() {\n    if (race) {\n      fetch(`/races/${race.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          is_favorited: !isFavorite\n        })\n      }).then(r => r.json()).then(data => {\n        setIsFavorite(isFavorite => !isFavorite);\n        updateFavorite(data);\n      }).catch(err => {\n        console.log(\"Error updating favorite:\", err);\n      });\n    }\n  }\n\n  function handleClick() {\n    setShowResult(true); // console.log(race.cars.length)\n\n    if (race.cars.length >= 2) {\n      var _race$race_track, _race$race_track2, _race$race_track3, _race$cars, _sortedScores$, _sortedScores;\n\n      // Check if there are at least 2 cars in the race\n      const trackLength = parseFloat(race === null || race === void 0 ? void 0 : (_race$race_track = race.race_track) === null || _race$race_track === void 0 ? void 0 : _race$race_track.length); // Get the length of the race track and convert it to a float\n\n      const trackTurns = parseInt(race === null || race === void 0 ? void 0 : (_race$race_track2 = race.race_track) === null || _race$race_track2 === void 0 ? void 0 : _race$race_track2.turns); // Get the number of turns in the race track and convert it to an integer\n\n      const trackVerticalGain = parseInt(race === null || race === void 0 ? void 0 : (_race$race_track3 = race.race_track) === null || _race$race_track3 === void 0 ? void 0 : _race$race_track3.vertical_gain); // Get the vertical gain of the race track and convert it to an integer\n\n      const carPerformanceScores = race === null || race === void 0 ? void 0 : (_race$cars = race.cars) === null || _race$cars === void 0 ? void 0 : _race$cars.map(car => {\n        // Loop through each car in the race and calculate its performance score\n        const carPower = parseFloat(car.power.split(\" \")[0]); // Get the power of the car and convert it to a float\n\n        const carTorque = parseFloat(car.torque.split(\" \")[0]); // Get the torque of the car and convert it to a float\n\n        const speedScore = car.top_speed / (trackLength * trackTurns); // Calculate the speed score of the car\n\n        const handlingScore = (carPower + carTorque) / car.weight; // Calculate the handling score of the car\n\n        const hillClimbScore = (carPower + carTorque) / trackVerticalGain; // Calculate the hill climb score of the car\n\n        const totalScore = speedScore + handlingScore + hillClimbScore; // Calculate the total score of the car\n\n        return {\n          car: car,\n          score: totalScore\n        }; // Return an object with the car and its performance score\n      });\n      const sortedScores = carPerformanceScores && carPerformanceScores.length > 0 ? carPerformanceScores.sort((a, b) => b.score - a.score) : []; // Sort the cars based on their performance score in descending order\n\n      const highestScore = (_sortedScores$ = sortedScores[0]) === null || _sortedScores$ === void 0 ? void 0 : _sortedScores$.score; // Get the performance score of the car with the highest score\n\n      const lowestScore = (_sortedScores = sortedScores[sortedScores.length - 1]) === null || _sortedScores === void 0 ? void 0 : _sortedScores.score; // Get the performance score of the car with the lowest score\n\n      const range = highestScore - lowestScore; // Calculate the range of performance scores\n\n      const result = sortedScores.map(car => {\n        const percentage = ((car.score - lowestScore) / range * 0.8 + 0.1) * 100;\n        const explanation = `The ${car.car.make} ${car.car.model} has a score of ${car.score.toFixed(2)}, which gives it a winning chance between ${(percentage - 5).toFixed(2)}% and ${percentage.toFixed(2)}%. This car has a top speed of ${car.car.top_speed} mph, a zero-to-sixty time of ${car.car.zero_to_sixty_mph} seconds, and a weight of ${car.car.weight} pounds. Based on these attributes, this car is ${percentage.toFixed(2)}% likely to win the race on this track.`;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [car.car.make, \" - \", car.car.model]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\"Winning Chance: \", `${(percentage - 5).toFixed(2)}% - ${percentage.toFixed(2)}%`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: explanation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      });\n      setResult(result);\n    } else {\n      setHasMinimumCars(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"race-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"race-title\",\n      children: [race === null || race === void 0 ? void 0 : race.name, \" - \", race === null || race === void 0 ? void 0 : (_race$race_track4 = race.race_track) === null || _race$race_track4 === void 0 ? void 0 : _race$race_track4.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      class: \"fa-solid fa-pen-to-square cursor-pointer fa-2xl\",\n      style: {\n        color: '#290465',\n        textShadow: '1px 1px white'\n      },\n      onClick: e => setShow(!show)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: isFavorite ? \"fa-solid fa-star fa-2xl\" : \"fa-regular fa-star fa-2xl\",\n      onClick: handleFavorite\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(CarRaceImage, {\n      race: race,\n      setRace: setRace,\n      handleDeleteCar: handleDeleteCar,\n      show: show\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"deletebutton\",\n      onClick: handleDeleteRace,\n      children: \"DELETE RACE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"racebutton\",\n      onClick: handleClick,\n      children: \"LET'S RACE!  \\uD83C\\uDFC1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }, this), result, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-minimum\",\n      children: hasMinimumCars ? null : \"Error: A race must have at least 2 cars.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 7\n  }, this);\n}\n\n_s(RaceCard, \"9sEfGEmmRtGRXlFfeaZQDJsDnEk=\");\n\n_c = RaceCard;\nexport default RaceCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RaceCard\");","map":{"version":3,"names":["React","useState","useEffect","CarRaceImage","RaceCard","deleteRace","deleteCar","raceId","updateFavorite","show","setShow","isFavorite","setIsFavorite","result","setResult","hasMinimumCars","setHasMinimumCars","showResult","setShowResult","race","setRace","fetch","then","resp","json","data","is_favorited","racesCar","races_cars","find","toString","race_id","id","handleDeleteCar","carId","racesCarToDelete","car_id","method","headers","catch","err","console","log","handleDeleteRace","handleFavorite","body","JSON","stringify","r","handleClick","cars","length","trackLength","parseFloat","race_track","trackTurns","parseInt","turns","trackVerticalGain","vertical_gain","carPerformanceScores","map","car","carPower","power","split","carTorque","torque","speedScore","top_speed","handlingScore","weight","hillClimbScore","totalScore","score","sortedScores","sort","a","b","highestScore","lowestScore","range","percentage","explanation","make","model","toFixed","zero_to_sixty_mph","name","color","textShadow","e"],"sources":["/Users/dudabrasilc/Development/code/phase-5/pre-project/client/src/components/RaceCard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CarRaceImage from \"./CarRaceImage\";\n\nfunction RaceCard({ deleteRace, deleteCar, raceId, updateFavorite }) {\n  const [show, setShow] = useState(false);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [result, setResult] = useState(null);\n  const [hasMinimumCars, setHasMinimumCars] = useState(true);\n  const [showResult, setShowResult] = useState(false);\n  const [race, setRace] = useState([]);\n\n  useEffect(() => {\n    fetch(`/races/${raceId}`)\n      .then((resp) => resp.json())\n      .then((data) => {\n        setIsFavorite(data.is_favorited);\n      });\n  }, [raceId]);\n\n  useEffect(() => {\n    fetch(`/races/${raceId}`)\n      .then((resp) => resp.json())\n      .then((data) => {\n        setRace(data);\n      });\n  }, []);\n\n  if (!race) {\n    return null; // or some other fallback UI\n  }\n\n  const racesCar =\n    race.races_cars && race.races_cars.find((racesCar) => {\n      return toString(racesCar.race_id) === toString(race.id);\n    });\n\n  // this component is responsible to render all functionality of a racecard: delete race button,\n\n\n  const handleDeleteCar = (carId) => {\n    if (race && race.races_cars && racesCar) {\n      const racesCarToDelete = race.races_cars.find(\n        (racesCar) => racesCar.car_id === carId\n      );\n  \n      if (racesCarToDelete) {\n        fetch(`/races_cars/${racesCarToDelete.id}`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n          .then(resp => resp.json())\n          .then(data => {\n            deleteCar(carId);\n          })\n          .catch(err => {\n            console.log(\"Error deleting race car:\", err);\n          });\n      }\n    }\n  };\n  \n\n    const handleDeleteRace = () => {\n      if (race) {\n        fetch(`/races/${race.id}`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n          .then(resp => resp.json())\n          .then(data => {\n            deleteRace(race.id);\n          })\n          .catch(err => {\n            console.log(\"Error deleting race:\", err);\n          });\n      }\n    };\n\n  \n    function handleFavorite() {\n      if (race) {\n        fetch(`/races/${race.id}`, {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            is_favorited: !isFavorite\n          }),\n        })\n          .then(r => r.json())\n          .then(data => {\n            setIsFavorite(isFavorite => !isFavorite);\n            updateFavorite(data);\n          })\n          .catch(err => {\n            console.log(\"Error updating favorite:\", err);\n          });\n      }\n    }\n\n  function handleClick() {\n\n  setShowResult(true)\n\n  // console.log(race.cars.length)\n\n  if (race.cars.length >= 2) { // Check if there are at least 2 cars in the race\n    const trackLength = parseFloat(race?.race_track?.length); // Get the length of the race track and convert it to a float\n    const trackTurns = parseInt(race?.race_track?.turns); // Get the number of turns in the race track and convert it to an integer\n    const trackVerticalGain = parseInt(race?.race_track?.vertical_gain); // Get the vertical gain of the race track and convert it to an integer\n  \n    const carPerformanceScores = race?.cars?.map(car => { // Loop through each car in the race and calculate its performance score\n      \n        const carPower = parseFloat(car.power.split(\" \")[0]); // Get the power of the car and convert it to a float\n        const carTorque = parseFloat(car.torque.split(\" \")[0]); // Get the torque of the car and convert it to a float\n\n        const speedScore = car.top_speed / (trackLength * trackTurns); // Calculate the speed score of the car\n        const handlingScore = (carPower + carTorque) / car.weight; // Calculate the handling score of the car\n        const hillClimbScore = (carPower + carTorque) / trackVerticalGain; // Calculate the hill climb score of the car\n        const totalScore = speedScore + handlingScore + hillClimbScore; // Calculate the total score of the car\n\n        return {car: car, score: totalScore}; // Return an object with the car and its performance score\n    });\n  \n    const sortedScores = carPerformanceScores && carPerformanceScores.length > 0 ? carPerformanceScores.sort((a, b) => b.score - a.score) : []; // Sort the cars based on their performance score in descending order\n\n    const highestScore = sortedScores[0]?.score; // Get the performance score of the car with the highest score\n    const lowestScore = sortedScores[sortedScores.length - 1]?.score; // Get the performance score of the car with the lowest score\n    const range = highestScore - lowestScore; // Calculate the range of performance scores\n    \n      const result = sortedScores.map(car => {\n          const percentage = ((car.score - lowestScore) / range * 0.8 + 0.1) * 100;\n          const explanation = `The ${car.car.make} ${car.car.model} has a score of ${car.score.toFixed(2)}, which gives it a winning chance between ${(percentage - 5).toFixed(2)}% and ${percentage.toFixed(2)}%. This car has a top speed of ${car.car.top_speed} mph, a zero-to-sixty time of ${car.car.zero_to_sixty_mph} seconds, and a weight of ${car.car.weight} pounds. Based on these attributes, this car is ${(percentage).toFixed(2)}% likely to win the race on this track.`;\n          return (\n              <>\n              <div className=\"results\">\n                  <h1>{car.car.make} - {car.car.model}</h1>\n                  <h2>Winning Chance: {`${(percentage - 5).toFixed(2)}% - ${percentage.toFixed(2)}%`}</h2>\n                  <h3>{explanation}</h3>\n              </div>\n              </>\n          \n          );\n      });\n  \n  \n      setResult(result)\n    \n\n  } else {\n      setHasMinimumCars(false)\n  }\n     \n    }\n\n\n  return(\n      <div className=\"race-card\">\n          <h2 className=\"race-title\">{race?.name} - {race?.race_track?.name}</h2>\n          <i class=\"fa-solid fa-pen-to-square cursor-pointer fa-2xl\" style={{ color: '#290465', textShadow: '1px 1px white'}} onClick={(e) => setShow(!show)}></i>\n          {/* favorite star */}\n           <i className={isFavorite ? \"fa-solid fa-star fa-2xl\" : \"fa-regular fa-star fa-2xl\" } onClick={handleFavorite} />\n           {/* first function in the image div is show and hide the X. the link is the image of the races car */}\n          <CarRaceImage race={race} setRace={setRace} handleDeleteCar={handleDeleteCar} show={show}/>\n          <button className=\"deletebutton\" onClick={handleDeleteRace}>DELETE RACE</button>\n          <br></br>\n          <br></br>\n          <button className=\"racebutton\" onClick={handleClick} >LET'S RACE!  🏁</button>\n          {/* <hr></hr> */}\n          {/* <h1 className=\"result-title\">{showResult ? \"Race Result\" : null}</h1> */}\n          {result}\n          <div className=\"error-minimum\">{hasMinimumCars ? null : \"Error: A race must have at least 2 cars.\"}</div>   \n      </div>\n  )\n}\n\n\nexport default RaceCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}